// <auto-generated />
using System;
using ManhwaTrackerApplicationServer.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace ManhwaTrackerApplicationServer.Migrations
{
    [DbContext(typeof(ManhwaTrackerDbContext))]
    [Migration("20211226001619_0_InitialCreate")]
    partial class _0_InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("GenreManhwa", b =>
                {
                    b.Property<int>("GenresId")
                        .HasColumnType("integer");

                    b.Property<int>("ManhwasId")
                        .HasColumnType("integer");

                    b.HasKey("GenresId", "ManhwasId");

                    b.HasIndex("ManhwasId");

                    b.ToTable("GenreManhwa");
                });

            modelBuilder.Entity("ManhwaTag", b =>
                {
                    b.Property<int>("ManhwasId")
                        .HasColumnType("integer");

                    b.Property<int>("TagsId")
                        .HasColumnType("integer");

                    b.HasKey("ManhwasId", "TagsId");

                    b.HasIndex("TagsId");

                    b.ToTable("ManhwaTag");
                });

            modelBuilder.Entity("ManhwaTrackerApplicationServer.Models.Manhwa.Genre", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Genres");
                });

            modelBuilder.Entity("ManhwaTrackerApplicationServer.Models.Manhwa.Manhwa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("ChapterCount")
                        .HasColumnType("integer");

                    b.Property<string>("CoverImage")
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Format")
                        .HasColumnType("text");

                    b.Property<DateTime?>("ReleaseDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("SourceMaterial")
                        .HasColumnType("integer");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<string>("Title")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Manhwas");
                });

            modelBuilder.Entity("ManhwaTrackerApplicationServer.Models.Manhwa.Synonym", b =>
                {
                    b.Property<string>("Title")
                        .HasColumnType("text");

                    b.Property<int>("TitleLanguage")
                        .HasColumnType("integer");

                    b.Property<int?>("ManhwaId")
                        .HasColumnType("integer");

                    b.HasKey("Title", "TitleLanguage");

                    b.HasIndex("ManhwaId");

                    b.ToTable("Synonym");
                });

            modelBuilder.Entity("ManhwaTrackerApplicationServer.Models.Manhwa.Tag", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Tags");
                });

            modelBuilder.Entity("ManhwaTrackerApplicationServer.Models.User.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("GenreManhwa", b =>
                {
                    b.HasOne("ManhwaTrackerApplicationServer.Models.Manhwa.Genre", null)
                        .WithMany()
                        .HasForeignKey("GenresId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ManhwaTrackerApplicationServer.Models.Manhwa.Manhwa", null)
                        .WithMany()
                        .HasForeignKey("ManhwasId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ManhwaTag", b =>
                {
                    b.HasOne("ManhwaTrackerApplicationServer.Models.Manhwa.Manhwa", null)
                        .WithMany()
                        .HasForeignKey("ManhwasId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ManhwaTrackerApplicationServer.Models.Manhwa.Tag", null)
                        .WithMany()
                        .HasForeignKey("TagsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ManhwaTrackerApplicationServer.Models.Manhwa.Synonym", b =>
                {
                    b.HasOne("ManhwaTrackerApplicationServer.Models.Manhwa.Manhwa", null)
                        .WithMany("Synonyms")
                        .HasForeignKey("ManhwaId");
                });

            modelBuilder.Entity("ManhwaTrackerApplicationServer.Models.Manhwa.Manhwa", b =>
                {
                    b.Navigation("Synonyms");
                });
#pragma warning restore 612, 618
        }
    }
}
